(defun ama-graphics-adjustAxisRange (amin0 amax0)
  (let* (numTicks
         olst
         (amin amin0)
         (amax amax0)
         (MinTicks 4)
         (grossStep (/ (- amax amin) MinTicks))
         (step (expt 10 (floor (log10 grossStep)))))
    (if (< (* 5 step) grossStep)
        (setq step (* 5 step))
      (if (< (* 2 step) grossStep)
          (setq step (* step 2))))
    (setq numTicks (truncate (- (ceiling (/ amax step)) (floor (/ amin step)))))
    (setq amin (* (floor (/ amin step)) step))
    (setq amax (* (ceiling (/ amax step)) step))
    (message "step = %f" step)
    (message "numTicks = %d" numTicks)
    ;;(list amin amax numTicks)
    (while (<= amin amax)
      (when (and (>= amin amin0)
                (<= amin amax0))
        (setq olst (append olst (list amin))))
      (setq amin (+ amin step)))
    olst
    ))
(let (xxx)
  (setq xxx (ama-graphics-adjustAxisRange -0.008205 1.85))
  (message "xxx = %S" xxx))
  
(defun ama-graphics-label-range-maker (r1 r2)
  (message "r1 = %f r2=%f" r1 r2)
  (let (distance r d s1 s2 max_tick)
    (setq max_tick 19)
    (setq distance (- r2 r1))
    (setq r (log10 distance))
    (setq d (expt 10 (truncate r)))
    (message "d = %f" d)
    (when (< (/ distance d) (/ max_tick 2))
      (setq d (/ d 2.0)))
    (message "d = %f" d)
    (setq s1 (* (1+ (truncate (/ r1 d))) d))
    (setq s2 (* (truncate (/ r2 d)) d))
    (list s1 s2)
  ))
;;(ama-graphics-label-range-maker 83 128)
(ama-graphics-label-range-maker -0.83 0.8)
(truncate(-1.0e+INF))
(expt 10 (truncate (log10 1.63)))
(floor 101.88)

;;(expt 2 5)
(log10 1050)
(expt 10 3)
(int 3.111)
